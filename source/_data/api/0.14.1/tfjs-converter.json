{
  "docs": {
    "headings": [
      {
        "name": "Models",
        "description": "",
        "subheadings": [
          {
            "name": "Classes",
            "symbols": [
              {
                "docInfo": {
                  "heading": "Models",
                  "subheading": "Classes"
                },
                "symbolName": "FrozenModel",
                "documentation": "A `tf.FrozenModel` is a directed, acyclic graph of built from\nSavedModel GraphDef and allows inference exeuction.",
                "fileName": "#35",
                "githubUrl": "https://github.com/tensorflow/tfjs-converter/blob/v0.7.1/src/executor/frozen_model.ts#L35-L265",
                "methods": [],
                "isClass": true,
                "inheritsFrom": "tfc.InferenceModel"
              }
            ]
          },
          {
            "name": "Loading",
            "symbols": [
              {
                "docInfo": {
                  "heading": "Models",
                  "subheading": "Loading"
                },
                "symbolName": "loadFrozenModel",
                "paramStr": "(modelUrl, weightsManifestUrl, requestOption?)",
                "parameters": [
                  {
                    "name": "modelUrl",
                    "documentation": "url for the model file generated by scripts/convert.py\nscript.",
                    "type": "string",
                    "optional": false,
                    "isConfigParam": false
                  },
                  {
                    "name": "weightsManifestUrl",
                    "documentation": "",
                    "type": "string",
                    "optional": false,
                    "isConfigParam": false
                  },
                  {
                    "name": "requestOption",
                    "documentation": "options for Request, which allows to send credentials\nand custom headers.",
                    "type": "RequestInit",
                    "optional": true,
                    "isConfigParam": false
                  }
                ],
                "returnType": "Promise",
                "documentation": "Load the frozen model through url.\n\nExample of loading the MobileNetV2 model and making a prediction with a zero\ninput.\n\n```js\nconst GOOGLE_CLOUD_STORAGE_DIR =\n     'https://storage.googleapis.com/tfjs-models/savedmodel/';\nconst MODEL_URL = 'mobilenet_v2_1.0_224/tensorflowjs_model.pb';\nconst WEIGHTS_URL =\n     'mobilenet_v2_1.0_224/weights_manifest.json';\nconst model = await tf.loadFrozenModel(GOOGLE_CLOUD_STORAGE_DIR + MODEL_URL,\n      GOOGLE_CLOUD_STORAGE_DIR + WEIGHTS_URL);\nconst zeros = tf.zeros([1, 224, 224, 3]);\nmodel.predict(zeros).print();\n```",
                "fileName": "#293",
                "githubUrl": "https://github.com/tensorflow/tfjs-converter/blob/v0.7.1/src/executor/frozen_model.ts#L293-L299",
                "isFunction": true
              },
              {
                "docInfo": {
                  "heading": "Models",
                  "subheading": "Loading"
                },
                "symbolName": "loadTfHubModule",
                "paramStr": "(tfhubModuleUrl, requestOption?)",
                "parameters": [
                  {
                    "name": "tfhubModuleUrl",
                    "documentation": "",
                    "type": "string",
                    "optional": false,
                    "isConfigParam": false
                  },
                  {
                    "name": "requestOption",
                    "documentation": "options for Request, which allows to send credentials\nand custom headers.",
                    "type": "RequestInit",
                    "optional": true,
                    "isConfigParam": false
                  }
                ],
                "returnType": "Promise",
                "documentation": "Load the frozen model hosted by TF-Hub.\n\nExample of loading the MobileNetV2 model and making a prediction with a zero\ninput.\n\n```js\nconst TFHUB_MOBILENET =\n   'https://tfhub.dev/google/imagenet/mobilenet_v2_140_224/classification/2';\nconst model = await tf.loadTfHubModule(TFHUB_MOBILENET);\nconst zeros = tf.zeros([1, 224, 224, 3]);\nmodel.predict(zeros).print();\n```",
                "fileName": "#321",
                "githubUrl": "https://github.com/tensorflow/tfjs-converter/blob/v0.7.1/src/executor/frozen_model.ts#L321-L330",
                "isFunction": true
              }
            ]
          }
        ]
      }
    ]
  },
  "docLinkAliases": {}
}