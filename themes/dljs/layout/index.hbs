<div class="page index-page">
  <div class="hero">
    <div class="hero-title">
      <h1>
         TensorFlow.js
      </h1>
      <p>
        A WebGL accelerated, browser based JavaScript library for training and deploying ML models.
      </p>
    </div>
  </div>

  <div class="content">
    {{!-- <div class="initial-blurb">
       TensorFlow.js is a machine learning framework for JavaScript developers. It supports building ML models in JavaScript, and
      training and deploying them in the browser for execution using WebGL acceleration. It is compatible with TensorFlow, and
      supports importing saved TensorFlow models. It permits execution of models on data kept at client-side, thus enabling applications
      where data privacy and regulations may require this. Also, In the future, it will also include support for running models
      in a Node.js runtime with TensorFlow backend.
      <hr />
    </div> --}}

    <div class="value-props">
      <div class="proposition">
        <div class="title">Develop ML in the Browser</div>
        <span>
          Use flexible and intuitive APIs to build models from scratch using the low-level JavaScript linear algebra library or the
          high-level layers API
        </span>
      </div>

      <div class="proposition">
        <div class="title">Run Existing models</div>
        <span>
          Use TensorFlow.js model converters to run pre-existing TensorFlow models right in the browser.
        </span>
      </div>

      <div class="proposition">
        <div class="title">Retrain Existing models</div>
        <span>
          Retrain pre-existing ML models using sensor data connected to the browser, or other client-side data.
        </span>
      </div>


    </div>

    <div class="demos">
      <h1>Demos</h1>
      <div class="demo-block">
        <div class="info">
          <div class="title">
            <a href="">Teachable Machine</a>
          </div>
          <div class="blurb">
             No coding required! Teach a machine to
             recognize images and play sounds.
          </div>

          <div class="ctas">
            <a href="">
              <button class="mdc-button mdc-button--raised">Go to Demo!</button>
            </a>
            <a href="">
              <button class="mdc-button mdc-button--raised">Code</button>
            </a>
          </div>
        </div>
        <div class="image mdc-card">
          <img src="images/teachablemachine_preview.jpg">
        </div>
      </div>

      <div class="demo-block">
        <div class="info">
          <div class="title">
            <a href="">Performance RNN</a>
          </div>
          <div class="blurb">
            Enjoy a real-time piano performance by a neural network
          </div>

          <div class="ctas">
            <a href="">
              <button class="mdc-button mdc-button--raised">Go to Demo!</button>
            </a>
            <a href="">
              <button class="mdc-button mdc-button--raised">Code</button>
            </a>
          </div>
        </div>
        <div class="image mdc-card">
          <img src="images/performance_rnn_preview.jpg">
        </div>
      </div>

    </div>


    <div id="getting-started" class="getting-started">
      <h1>Getting Started</h1>
      <p>
        You can use TensorFlow.js by installing it from NPM or via script tags.
      </p>

      <h3>Installation</h3>
      <div class="gs-code">
        <pre><code class="lang-shell">yarn add @tensorflow/tfjs</code></pre>
        <pre><code class="lang-shell">npm install @tensorflow/tfjs</code></pre>
      </div>

      <div class="gs-code">
        <pre>
          <code class="lang-html">&lt;script src="https://cdn.jsdelivr.net/npm/tfjs@{{latestVersion}}"&gt;&lt;/script&gt;</code>
        </pre>
      </div>


      <h3>Usage</h3>
      <p>
        See our <a href='/tutorials'>tutorials</a>,
        <a href='https://github.com/tensorflow/tfjs-examples'>examples</a>
        and <a href="/api/{{latestVersion}}/">documentation</a> for more details,
        but let's look at what it looks like to add two tensors in TensorFlow.js
      </p>
      <div class="gs-code">
<pre>
  <code class="lang-js">
  const a = dl.tensor1d([1, 2, 3]);
  const b = dl.scalar(2);
  const result = a.add(b); // a is not modified, result is a new tensor

  // Option 1: With a Promise.
  result.data().then(data => console.log(data)); // Float32Array([3, 4, 5])

  // Option 2: Synchronous download of data. Blocks the UI.
  console.log(result.dataSync());
  </code>
</pre>
      </div>
    </div>

    <div class="getting-help">
      <h1>Need Help? Want to connect?</h1>
      <p>
        Feel free to file issues on our <a href="">GitHub Repository</a> if you run into bugs using the library.
        We also have a <a href="">community mailing list</a> for people to ask questions, get technical help, and share what they are doing with
        TensorFlow.js! To keep up to date with TensorFlow.js news follow us on <a href="">twitter</a> or join the <a href="">announcement only</a> mailing list.
        <ul>
          <li>
            <a href="">GitHub Issues</a>
          </li>
          <li>
            <a href="">Community Discussion List</a>
          </li>
          <li>
            <a href="">Announcement only mailing list</a>
          </li>
          <li>
            <a href="">Twitter</a>
          </li>
        </ul>
      </p>
    </div>

  </div>

  <script>hljs.initHighlightingOnLoad();</script>
</div>
