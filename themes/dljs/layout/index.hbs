<div class="index-hero">
  <div class="hero-title">
    <img src='images/TF_JS_lockup.png' alt="TensorFlow.js"></img>
    <p>
      A WebGL accelerated, browser based JavaScript library for training and deploying ML models.
    </p>
  </div>
</div>
<div class="page index-page">


  <div class="content">
    <div class="value-props">
      <div class="proposition">
        <div class="title">Develop ML in the Browser</div>
        <span>
          Use flexible and intuitive APIs to build and train models from scratch using the low-level JavaScript linear algebra library or the
          high-level layers API
        </span>
      </div>

      <div class="proposition">
        <div class="title">Run Existing models</div>
        <span>
          Use TensorFlow.js model converters to run pre-existing TensorFlow models right in the browser.
        </span>
      </div>

      <div class="proposition">
        <div class="title">Retrain Existing models</div>
        <span>
          Retrain pre-existing ML models using sensor data connected to the browser, or other client-side data.
        </span>
      </div>


    </div>

    <div class="demos">
      <h1>Demos</h1>

      <div class="demo-block">
        <div class="info">
          <div class="title">
            <a href="https://emojiscavengerhunt.withgoogle.com/" target="_blank">Emoji Scavenger Hunt</a>
          </div>
          <div class="blurb">
             Use your phoneâ€™s camera to identify emojis in the real world. Can you find all the emojis before time expires?
          </div>

          <div class="ctas">
            <a href="https://emojiscavengerhunt.withgoogle.com/" target="_blank">
              <button class="mdc-button mdc-button--raised">Go to Demo!</button>
            </a>
            <a href="https://github.com/google/emoji-scavenger-hunt">
              <button class="mdc-button mdc-button--raised">Code</button>
            </a>
          </div>
        </div>
        <img src="images/EmojiScavengerHunt.png">
      </div>

      <div class="demo-block">
        <div class="info">
          <div class="title">
            <a href="https://storage.googleapis.com/tfjs-examples/webcam-transfer-learning/dist/index.html" target="_blank">
             Webcam Controller
            </a>
          </div>
          <div class="blurb">
            Play Pac-Man using images trained in your browser.
          </div>

          <div class="ctas">
            <a href="https://storage.googleapis.com/tfjs-examples/webcam-transfer-learning/dist/index.html" target="_blank">
              <button class="mdc-button mdc-button--raised">Go to Demo!</button>
            </a>
            <a href="https://github.com/tensorflow/tfjs-examples/tree/master/webcam-transfer-learning">
              <button class="mdc-button mdc-button--raised">Code</button>
            </a>
          </div>
        </div>
        <img src="images/pacman-controller.png">
      </div>

      <div class="demo-block">
        <div class="info">
          <div class="title">
            <a href="https://teachablemachine.withgoogle.com/" target="_blank">
              Teachable Machine
            </a>
          </div>
          <div class="blurb">
             No coding required! Teach a machine to
             recognize images and play sounds.
          </div>

          <div class="ctas">
            <a href="https://teachablemachine.withgoogle.com/" target="_blank">
              <button class="mdc-button mdc-button--raised">Go to Demo!</button>
            </a>
            <a href="https://github.com/googlecreativelab/teachable-machine"  target="_blank">
              <button class="mdc-button mdc-button--raised">Code</button>
            </a>
          </div>
        </div>
        <img src="images/teachablemachine_preview.jpg">
      </div>

      <div class="demo-block">
        <div class="info">
          <div class="title">
            <a href="https://magenta.tensorflow.org/demos/performance_rnn/index.html" target="_blank">
              Performance RNN
            </a>
          </div>
          <div class="blurb">
            Enjoy a real-time piano performance by a neural network
          </div>

          <div class="ctas">
            <a href="https://magenta.tensorflow.org/demos/performance_rnn/index.html" target="_blank">
              <button class="mdc-button mdc-button--raised">Go to Demo!</button>
            </a>
            <a href="https://github.com/tensorflow/magenta-demos/tree/master/performance_rnn">
              <button class="mdc-button mdc-button--raised">Code</button>
            </a>
          </div>
        </div>
        <img src="images/performance_rnn_preview.jpg">
      </div>

      <div class="demo-block">
        <div class="info">
          <div class="title">
            <a href="https://storage.googleapis.com/tfjs-models/demos/posenet/camera.html" target="_blank">
              PoseNet
            </a>
          </div>
          <div class="blurb">
             Real-time <a href="https://medium.com/tensorflow/real-time-human-pose-estimation-in-the-browser-with-tensorflow-js-7dd0bc881cd5" target="_blank">Human Pose Estimation</a> in the browser.
          </div>

          <div class="ctas">
            <a href="https://storage.googleapis.com/tfjs-models/demos/posenet/camera.html" target="_blank">
              <button class="mdc-button mdc-button--raised">Go to Demo!</button>
            </a>
            <a href="https://github.com/tensorflow/tfjs-models/tree/master/posenet">
              <button class="mdc-button mdc-button--raised">Code</button>
            </a>
          </div>
        </div>
        <img src="images/posenet_preview.jpg">
      </div>

      <div class="demo-block">
        <div class="info">
          <div class="title">
            <a href="https://storage.googleapis.com/tfjs-models/demos/posenet/camera.html" target="_blank">
              Node.js: Pitch Prediction
            </a>
          </div>
          <div class="blurb">
            Train a server-side model to classify baseball pitch types using Node.js.
          </div>

          <div class="ctas">
            <a href="https://github.com/tensorflow/tfjs-examples/tree/master/baseball-node">
              <button class="mdc-button mdc-button--raised">Code</button>
            </a>
          </div>
        </div>
        <img src="images/baseball_preview.png">
      </div>

    </div>


    <div id="getting-started" class="getting-started">
      <h1>Getting Started</h1>
      <p>
        There are two main ways to get TensorFlow.js in your JavaScript project:
        via <a href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Howto/Use_JavaScript_within_a_webpage" target="_blank">
        script tags</a> <strong>or</strong> by installing it from <a href="https://www.npmjs.com/" target="_blank">NPM</a>
        and using a build tool like <a href="https://parceljs.org/" target="_blank">Parcel</a>,
        <a href="https://webpack.js.org/" target="_blank">WebPack</a>, or <a href="https://rollupjs.org/guide/en" target="_blank">Rollup</a>.
      </p>

      <h3>via Script Tag</h3>
      <p>Add the following code to an HTML file:</p>
      <div class="gs-code">
        <pre>
          <code class="lang-html">&lt;html&gt;
  &lt;head&gt;
    &lt;!-- Load TensorFlow.js --&gt;
    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/@tensorflow/tfjs@{{latestVersion}}&quot;&gt; &lt;/script&gt;

    &lt;!-- Place your code in the script tag below. You can also use an external .js file --&gt;
    &lt;script&gt;
      // Notice there is no 'import' statement. 'tf' is available on the index-page
      // because of the script tag above.

      // Define a model for linear regression.
      const model = tf.sequential();
      model.add(tf.layers.dense({units: 1, inputShape: [1]}));

      // Prepare the model for training: Specify the loss and the optimizer.
      model.compile({loss: 'meanSquaredError', optimizer: 'sgd'});

      // Generate some synthetic data for training.
      const xs = tf.tensor2d([1, 2, 3, 4], [4, 1]);
      const ys = tf.tensor2d([1, 3, 5, 7], [4, 1]);

      // Train the model using the data.
      model.fit(xs, ys).then(() =&gt; {
        // Use the model to do inference on a data point the model hasn't seen before:
        // Open the browser devtools to see the output
        model.predict(tf.tensor2d([5], [1, 1])).print();
      });
    &lt;/script&gt;
  &lt;/head&gt;

  &lt;body&gt;
  &lt;/body&gt;
&lt;/html&gt;</code>
        </pre>
      </div>
      <p>Open up that html file in your browser and the code should run!</p>

      <h3>via NPM</h3>

      <p>
        Add TensorFlow.js to your project using yarn <strong>or</strong> npm. <b>Note:</b> Because
        we use ES2017 syntax (such as `import`), this workflow assumes you are using a bundler/transpiler
        to convert your code to something the browser understands. See our
        <a href='https://github.com/tensorflow/tfjs-examples' target="_blank">examples</a>
        to see how we use <a href="https://parceljs.org/" target="_blank">Parcel</a> to build
        our code. However you are free to use any build tool that you prefer.
      </p>

      <div class="gs-code">
        <pre><code class="lang-shell">yarn add @tensorflow/tfjs</code></pre>
      </div>

      <div class="gs-code">
        <pre><code class="lang-shell">npm install @tensorflow/tfjs</code></pre>
      </div>

      <p>In your main js file:</p>

      <div class="gs-code">
<pre>
  <code class="lang-js">
  import * as tf from '@tensorflow/tfjs';

  // Define a model for linear regression.
  const model = tf.sequential();
  model.add(tf.layers.dense({units: 1, inputShape: [1]}));

  // Prepare the model for training: Specify the loss and the optimizer.
  model.compile({loss: 'meanSquaredError', optimizer: 'sgd'});

  // Generate some synthetic data for training.
  const xs = tf.tensor2d([1, 2, 3, 4], [4, 1]);
  const ys = tf.tensor2d([1, 3, 5, 7], [4, 1]);

  // Train the model using the data.
  model.fit(xs, ys).then(() => {
    // Use the model to do inference on a data point the model hasn't seen before:
    model.predict(tf.tensor2d([5], [1, 1])).print();
  });
  </code>
</pre>
      </div>
    </div>

    <p>
      See our
      <a href='./tutorials'>tutorials</a>,
      <a href='https://github.com/tensorflow/tfjs-examples' target="_blank">examples</a>
      and
      <a href="./api/{{latestVersion}}/">documentation</a> for more details.
    </p>


    <div class="getting-help">
      <h1>Need Help? Want to connect?</h1>
      <p>
        Feel free to file issues on our <a href="https://github.com/tensorflow/tfjs/issues" target="_blank">GitHub Repository</a> if you run into bugs using the library.
        We also have a <a href="https://groups.google.com/a/tensorflow.org/forum/#!forum/tfjs" target="_blank">community mailing list</a>
        for people to ask questions, get technical help, and share what they are doing with
        TensorFlow.js! To keep up to date with TensorFlow.js news follow us on <a href="https://twitter.com/tensorflow" target="_blank">twitter</a> or join
        the <a href="https://groups.google.com/a/tensorflow.org/forum/#!forum/tfjs-announce" target="_blank">announcement only</a> mailing list.
        <ul>
          <li>
            <a href="https://github.com/tensorflow/tfjs/issues" target="_blank">GitHub Issues</a>
          </li>
          <li>
            <a href="https://groups.google.com/a/tensorflow.org/forum/#!forum/tfjs" target="_blank">Community Discussion List</a>
          </li>
          <li>
            <a href="https://groups.google.com/a/tensorflow.org/forum/#!forum/tfjs-announce" target="_blank">Announcement only mailing list</a>
          </li>
          <li>
            <a href="https://twitter.com/tensorflow" target="_blank">Twitter</a>
          </li>
        </ul>
      </p>
    </div>

  </div>

  <script>hljs.initHighlightingOnLoad();</script>
</div>
